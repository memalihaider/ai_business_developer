version: '3.8'

services:
  # Main Application
  app:
    build: .
    container_name: ai-business-dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    env_file:
      - .env.production
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/app/logs
    networks:
      - ai-business-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ai-business-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ai_business_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_password_change_me}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    ports:
      - "5432:5432"
    networks:
      - ai-business-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: ai-business-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_password_change_me}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - ai-business-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: ai-business-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - app
    networks:
      - ai-business-network

volumes:
  postgres_data:
  redis_data:

networks:
  ai-business-network:
    driver: bridge